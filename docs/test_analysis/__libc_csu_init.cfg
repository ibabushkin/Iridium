
=== 0 0 25 ===
__libc_csu_init proc near
var_30= dword ptr -30h
var_2C= dword ptr -2Ch
var_28= dword ptr -28h
var_14= dword ptr -14h
arg_0= dword ptr  10h
arg_4= dword ptr  14h
arg_8= dword ptr  18h
push ebp
push edi
push esi
xor esi, esi
push ebx
call __x86_get_pc_thunk_bx
add ebx, 1329h
sub esp, 2Ch
mov ebp, [esp+30h+arg_0]
mov edi, [esp+30h+arg_4]
call _init_proc
lea eax, [ebx-0ECh]
lea edx, [ebx-0ECh]
sub edx, eax
sar edx, 2
mov [esp+30h+var_14], edx
jz short loc_80486AD


=== 1 25 27 ===
nop 
lea esi, [esi+0]


=== 2 27 34 ===
loc_8048690:
mov eax, [esp+30h+arg_8]
mov [esp+30h+var_2C], edi
mov [esp+30h+var_30], ebp
mov [esp+30h+var_28], eax
call dword ptr [ebx+esi*4-0ECh]
inc esi


=== 3 34 36 ===
cmp esi, [esp+30h+var_14]
jnz short loc_8048690


=== 4 36 44 ===
loc_80486AD:
add esp, 2Ch
pop ebx
pop esi
pop edi
pop ebp
retn 
__libc_csu_init endp

0-4
0-1
1-2
2-3
3-2
3-4
==================
Analyzer is reducing graph ...
Postorder of dfs-tree: [4, 3, 2, 1, 0]
==================
analyzing node 4 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [4]
found nothing, block is singular.
==================
analyzing node 3 ...
target of backedge  ... False
branching ... True
couldn't find simple structure.
found knot-node: 4
block: [4]
found nothing, block is singular.
==================
analyzing node 2 ...
target of backedge  ... 3
branching ... False
loop... False
found simple structure.
block: [2, 3]
appendable to 3 ... False
correcting to do-loop.
reduction successful.
current nodeset: | 0 | 1 | 4 | 5 | 
current edgeset: | 0-4 | 5-4 | 1-5 | 0-1 | 
applying recursive analysis ...
==================
analyzing node 5 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [5]
found nothing, block is singular.
==================
analyzing node 1 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [1, 5]
appendable to 5 ... False
reduction successful.
current nodeset: | 0 | 4 | 6 | 
current edgeset: | 0-4 | 6-4 | 0-6 | 
applying recursive analysis ...
==================
analyzing node 6 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [6]
found nothing, block is singular.
==================
analyzing node 0 ...
target of backedge  ... False
branching ... True
found simple structure.
if-then: [0, 6]
reduction successful.
current nodeset: | 4 | 7 | 
current edgeset: | 7-4 | 
applying recursive analysis ...
==================
analyzing node 7 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [4, 7]
appendable to 4 ... False
reduction successful.
current nodeset: | 8 | 
applying recursive analysis ...
==================
analyzing node 8 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [8]
found nothing, block is singular.
==================RESULTS==================
Graph starting at node 8
id: 8 type: block starts at 7:
    |-- nodes:
    |   id: 7 type: if-then starts at 0:
    |       then:6 condition:0 
    |       |-- nodes:
    |       |   id: 0 type: low-level
    |       |   +--------------------------+
    |       |   |__libc_csu_init proc near |
    |       |   |var_30= dword ptr -30h    |
    |       |   |var_2C= dword ptr -2Ch    |
    |       |   |var_28= dword ptr -28h    |
    |       |   |var_14= dword ptr -14h    |
    |       |   |arg_0= dword ptr  10h     |
    |       |   |arg_4= dword ptr  14h     |
    |       |   |arg_8= dword ptr  18h     |
    |       |   |push ebp                  |
    |       |   |push edi                  |
    |       |   |push esi                  |
    |       |   |xor esi, esi              |
    |       |   |push ebx                  |
    |       |   |call __x86_get_pc_thunk_bx|
    |       |   |add ebx, 1329h            |
    |       |   |sub esp, 2Ch              |
    |       |   |mov ebp, [esp+30h+arg_0]  |
    |       |   |mov edi, [esp+30h+arg_4]  |
    |       |   |call _init_proc           |
    |       |   |lea eax, [ebx-0ECh]       |
    |       |   |lea edx, [ebx-0ECh]       |
    |       |   |sub edx, eax              |
    |       |   |sar edx, 2                |
    |       |   |mov [esp+30h+var_14], edx |
    |       |   |jz short loc_80486AD      |
    |       |   +--------------------------+
    |       |   
    |       |   id: 6 type: block starts at 1:
    |       |       |-- nodes:
    |       |       |   id: 1 type: low-level
    |       |       |   +----------------+
    |       |       |   |nop             |
    |       |       |   |lea esi, [esi+0]|
    |       |       |   +----------------+
    |       |       |   
    |       |       |   id: 5 type: do-loop starts at 2:
    |       |       |       body:2 condition:3 
    |       |       |       |-- nodes:
    |       |       |       |   id: 2 type: low-level
    |       |       |       |   +-------------------------------+
    |       |       |       |   |loc_8048690:                   |
    |       |       |       |   |mov eax, [esp+30h+arg_8]       |
    |       |       |       |   |mov [esp+30h+var_2C], edi      |
    |       |       |       |   |mov [esp+30h+var_30], ebp      |
    |       |       |       |   |mov [esp+30h+var_28], eax      |
    |       |       |       |   |call dword ptr [ebx+esi*4-0ECh]|
    |       |       |       |   |inc esi                        |
    |       |       |       |   +-------------------------------+
    |       |       |       |   
    |       |       |       |   id: 3 type: low-level
    |       |       |       |   +-------------------------+
    |       |       |       |   |cmp esi, [esp+30h+var_14]|
    |       |       |       |   |jnz short loc_8048690    |
    |       |       |       |   +-------------------------+
    |       |       |       |   
    |       |       |       |-- edges:
    |       |       |       |       2-3
    |       |       |       |       3-2
    |       |       |       
    |       |       |-- edges:
    |       |       |       1-5
    |       |       
    |       |-- edges:
    |       |       0-6
    |       
    |   id: 4 type: low-level
    |   +--------------------+
    |   |loc_80486AD:        |
    |   |add esp, 2Ch        |
    |   |pop ebx             |
    |   |pop esi             |
    |   |pop edi             |
    |   |pop ebp             |
    |   |retn                |
    |   |__libc_csu_init endp|
    |   +--------------------+
    |   
    |-- edges:
    |       7-4
    
