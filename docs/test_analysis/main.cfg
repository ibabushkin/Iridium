
=== 0 0 37 ===
main proc near
var_2C= dword ptr -2Ch
var_18= dword ptr -18h
var_14= dword ptr -14h
var_10= dword ptr -10h
var_C= dword ptr -0Ch
var_4= dword ptr -4
arg_0= dword ptr  4
lea ecx, [esp+arg_0]
and esp, 0FFFFFFF0h
push dword ptr [ecx-4]
push ebp
mov ebp, esp
push ecx
sub esp, 34h
sub esp, 0Ch
push offset aEingabeInBuff
call _puts
add esp, 10h
sub esp, 8
lea eax, [ebp+var_2C]
push eax
push offset a20
call ___isoc99_scanf
add esp, 10h
sub esp, 0Ch
push offset aAnzahlSchleif
call _puts
add esp, 10h
sub esp, 8
lea eax, [ebp+var_14]
push eax
push offset a
call ___isoc99_scanf
add esp, 10h
mov [ebp+var_C], 0
jmp short loc_8048630


=== 1 37 50 ===
loc_80485C7:
sub esp, 0Ch
push offset aAnzahlInnerer
call _puts
add esp, 10h
sub esp, 8
lea eax, [ebp+var_18]
push eax
push offset a
call ___isoc99_scanf
add esp, 10h
mov [ebp+var_10], 0
jmp short loc_8048624


=== 2 50 53 ===
loc_80485F4:
mov eax, [ebp+var_10]
and eax, 1


=== 3 53 55 ===
test eax, eax
jnz short loc_8048610


=== 4 55 60 ===
sub esp, 0Ch
push offset aDGerade
call _puts
add esp, 10h
jmp short loc_8048620


=== 5 60 65 ===
loc_8048610:
sub esp, 0Ch
push offset aDUngerade
call _puts
add esp, 10h


=== 6 65 67 ===
loc_8048620:
add [ebp+var_10], 1


=== 7 67 69 ===
loc_8048624:
mov eax, [ebp+var_18]


=== 8 69 71 ===
cmp [ebp+var_10], eax
jl short loc_80485F4


=== 9 71 72 ===
add [ebp+var_C], 1


=== 10 72 74 ===
loc_8048630:
mov eax, [ebp+var_14]


=== 11 74 76 ===
cmp [ebp+var_C], eax
jl short loc_80485C7


=== 12 76 82 ===
mov eax, 0
mov ecx, [ebp+var_4]
leave 
lea esp, [ecx-4]
retn 
main endp

0-10
1-7
2-3
3-5
3-4
4-6
5-6
6-7
7-8
8-2
8-9
9-10
10-11
11-1
11-12
==================
Analyzer is reducing graph ...
Postorder of dfs-tree: [12, 5, 6, 4, 3, 2, 9, 8, 7, 1, 11, 10, 0]
==================
analyzing node 12 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [12]
found nothing, block is singular.
==================
analyzing node 5 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [5]
found nothing, block is singular.
==================
analyzing node 6 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [6]
found nothing, block is singular.
==================
analyzing node 4 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [4]
found nothing, block is singular.
==================
analyzing node 3 ...
target of backedge  ... False
branching ... True
found simple structure.
if-then-else: [3, 4, 5]
reduction successful.
current nodeset: | 0 | 1 | 2 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 
current edgeset: | 7-8 | 0-10 | 11-12 | 1-7 | 10-11 | 11-1 | 13-6 | 2-13 | 6-7 | 9-10 | 8-2 | 8-9 | 
applying recursive analysis ...
==================
analyzing node 13 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [13, 6]
appendable to 6 ... False
reduction successful.
current nodeset: | 0 | 1 | 2 | 7 | 8 | 9 | 10 | 11 | 12 | 14 | 
current edgeset: | 7-8 | 0-10 | 11-12 | 1-7 | 2-14 | 10-11 | 11-1 | 8-9 | 14-7 | 9-10 | 8-2 | 
applying recursive analysis ...
==================
analyzing node 14 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [14]
found nothing, block is singular.
==================
analyzing node 2 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [2, 14]
appendable to 14 ... True
appending to existing block ... done: 14
reduction successful.
current nodeset: | 0 | 1 | 7 | 8 | 9 | 10 | 11 | 12 | 14 | 
current edgeset: | 7-8 | 0-10 | 11-12 | 8-14 | 1-7 | 10-11 | 11-1 | 8-9 | 14-7 | 9-10 | 
applying recursive analysis ...
==================
analyzing node 14 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [14]
found nothing, block is singular.
==================
analyzing node 9 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [9]
found nothing, block is singular.
==================
analyzing node 8 ...
target of backedge  ... False
branching ... True
couldn't find simple structure.
No reduction of condition possible, retrying...
No reduction of condition possible, retrying...
No reduction of condition possible, retrying...
No reduction of condition possible, retrying...
==================
analyzing node 7 ...
target of backedge  ... 14
branching ... False
loop... True
found simple structure.
block: [8, 7]
appendable to 8 ... False
reduction successful.
current nodeset: | 0 | 1 | 9 | 10 | 11 | 12 | 14 | 15 | 
current edgeset: | 15-9 | 10-11 | 0-10 | 11-12 | 1-15 | 11-1 | 15-14 | 14-15 | 9-10 | 
applying recursive analysis ...
==================
analyzing node 15 ...
target of backedge  ... 14
branching ... True
loop... True
found simple structure.
while-loop: [15, 14]
reduction successful.
current nodeset: | 0 | 1 | 9 | 10 | 11 | 12 | 16 | 
current edgeset: | 10-11 | 0-10 | 11-12 | 1-16 | 11-1 | 16-9 | 9-10 | 
applying recursive analysis ...
==================
analyzing node 16 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [16, 9]
appendable to 9 ... False
reduction successful.
current nodeset: | 0 | 1 | 10 | 11 | 12 | 17 | 
current edgeset: | 17-10 | 0-10 | 11-12 | 1-17 | 10-11 | 11-1 | 
applying recursive analysis ...
==================
analyzing node 17 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [17]
found nothing, block is singular.
==================
analyzing node 1 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [1, 17]
appendable to 17 ... True
appending to existing block ... done: 17
reduction successful.
current nodeset: | 0 | 17 | 10 | 11 | 12 | 
current edgeset: | 11-17 | 17-10 | 10-11 | 0-10 | 11-12 | 
applying recursive analysis ...
==================
analyzing node 17 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [17]
found nothing, block is singular.
==================
analyzing node 11 ...
target of backedge  ... False
branching ... True
couldn't find simple structure.
No reduction of condition possible, retrying...
No reduction of condition possible, retrying...
No reduction of condition possible, retrying...
No reduction of condition possible, retrying...
==================
analyzing node 10 ...
target of backedge  ... 17
branching ... False
loop... True
found simple structure.
block: [10, 11]
appendable to 11 ... False
reduction successful.
current nodeset: | 0 | 17 | 18 | 12 | 
current edgeset: | 18-12 | 17-18 | 18-17 | 0-18 | 
applying recursive analysis ...
==================
analyzing node 18 ...
target of backedge  ... 17
branching ... True
loop... True
found simple structure.
while-loop: [18, 17]
reduction successful.
current nodeset: | 0 | 19 | 12 | 
current edgeset: | 0-19 | 19-12 | 
applying recursive analysis ...
==================
analyzing node 19 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [19, 12]
appendable to 12 ... False
reduction successful.
current nodeset: | 0 | 20 | 
current edgeset: | 0-20 | 
applying recursive analysis ...
==================
analyzing node 20 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [20]
found nothing, block is singular.
==================
analyzing node 0 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [0, 20]
appendable to 20 ... True
appending to existing block ... done: 20
reduction successful.
current nodeset: | 20 | 
applying recursive analysis ...
==================
analyzing node 20 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [20]
found nothing, block is singular.
==================RESULTS==================
Graph starting at node 20
id: 20 type: block starts at 0:
    |-- nodes:
    |   id: 0 type: low-level
    |   +--------------------------+
    |   |main proc near            |
    |   |var_2C= dword ptr -2Ch    |
    |   |var_18= dword ptr -18h    |
    |   |var_14= dword ptr -14h    |
    |   |var_10= dword ptr -10h    |
    |   |var_C= dword ptr -0Ch     |
    |   |var_4= dword ptr -4       |
    |   |arg_0= dword ptr  4       |
    |   |lea ecx, [esp+arg_0]      |
    |   |and esp, 0FFFFFFF0h       |
    |   |push dword ptr [ecx-4]    |
    |   |push ebp                  |
    |   |mov ebp, esp              |
    |   |push ecx                  |
    |   |sub esp, 34h              |
    |   |sub esp, 0Ch              |
    |   |push offset aEingabeInBuff|
    |   |call _puts                |
    |   |add esp, 10h              |
    |   |sub esp, 8                |
    |   |lea eax, [ebp+var_2C]     |
    |   |push eax                  |
    |   |push offset a20           |
    |   |call ___isoc99_scanf      |
    |   |add esp, 10h              |
    |   |sub esp, 0Ch              |
    |   |push offset aAnzahlSchleif|
    |   |call _puts                |
    |   |add esp, 10h              |
    |   |sub esp, 8                |
    |   |lea eax, [ebp+var_14]     |
    |   |push eax                  |
    |   |push offset a             |
    |   |call ___isoc99_scanf      |
    |   |add esp, 10h              |
    |   |mov [ebp+var_C], 0        |
    |   |jmp short loc_8048630     |
    |   +--------------------------+
    |   
    |   id: 19 type: while-loop starts at 18:
    |       body:17 condition:18 
    |       |-- nodes:
    |       |   id: 18 type: block starts at 10:
    |       |       |-- nodes:
    |       |       |   id: 10 type: low-level
    |       |       |   +---------------------+
    |       |       |   |loc_8048630:         |
    |       |       |   |mov eax, [ebp+var_14]|
    |       |       |   +---------------------+
    |       |       |   
    |       |       |   id: 11 type: low-level
    |       |       |   +--------------------+
    |       |       |   |cmp [ebp+var_C], eax|
    |       |       |   |jl short loc_80485C7|
    |       |       |   +--------------------+
    |       |       |   
    |       |       |-- edges:
    |       |       |       10-11
    |       |       
    |       |   id: 17 type: block starts at 1:
    |       |       |-- nodes:
    |       |       |   id: 1 type: low-level
    |       |       |   +--------------------------+
    |       |       |   |loc_80485C7:              |
    |       |       |   |sub esp, 0Ch              |
    |       |       |   |push offset aAnzahlInnerer|
    |       |       |   |call _puts                |
    |       |       |   |add esp, 10h              |
    |       |       |   |sub esp, 8                |
    |       |       |   |lea eax, [ebp+var_18]     |
    |       |       |   |push eax                  |
    |       |       |   |push offset a             |
    |       |       |   |call ___isoc99_scanf      |
    |       |       |   |add esp, 10h              |
    |       |       |   |mov [ebp+var_10], 0       |
    |       |       |   |jmp short loc_8048624     |
    |       |       |   +--------------------------+
    |       |       |   
    |       |       |   id: 16 type: while-loop starts at 15:
    |       |       |       body:14 condition:15 
    |       |       |       |-- nodes:
    |       |       |       |   id: 15 type: block starts at 7:
    |       |       |       |       |-- nodes:
    |       |       |       |       |   id: 7 type: low-level
    |       |       |       |       |   +---------------------+
    |       |       |       |       |   |loc_8048624:         |
    |       |       |       |       |   |mov eax, [ebp+var_18]|
    |       |       |       |       |   +---------------------+
    |       |       |       |       |   
    |       |       |       |       |   id: 8 type: low-level
    |       |       |       |       |   +---------------------+
    |       |       |       |       |   |cmp [ebp+var_10], eax|
    |       |       |       |       |   |jl short loc_80485F4 |
    |       |       |       |       |   +---------------------+
    |       |       |       |       |   
    |       |       |       |       |-- edges:
    |       |       |       |       |       7-8
    |       |       |       |       
    |       |       |       |   id: 14 type: block starts at 2:
    |       |       |       |       |-- nodes:
    |       |       |       |       |   id: 2 type: low-level
    |       |       |       |       |   +---------------------+
    |       |       |       |       |   |loc_80485F4:         |
    |       |       |       |       |   |mov eax, [ebp+var_10]|
    |       |       |       |       |   |and eax, 1           |
    |       |       |       |       |   +---------------------+
    |       |       |       |       |   
    |       |       |       |       |   id: 13 type: if-then-else starts at 3:
    |       |       |       |       |       then:4 condition:3 else:5 
    |       |       |       |       |       |-- nodes:
    |       |       |       |       |       |   id: 3 type: low-level
    |       |       |       |       |       |   +---------------------+
    |       |       |       |       |       |   |test eax, eax        |
    |       |       |       |       |       |   |jnz short loc_8048610|
    |       |       |       |       |       |   +---------------------+
    |       |       |       |       |       |   
    |       |       |       |       |       |   id: 4 type: low-level
    |       |       |       |       |       |   +---------------------+
    |       |       |       |       |       |   |sub esp, 0Ch         |
    |       |       |       |       |       |   |push offset aDGerade |
    |       |       |       |       |       |   |call _puts           |
    |       |       |       |       |       |   |add esp, 10h         |
    |       |       |       |       |       |   |jmp short loc_8048620|
    |       |       |       |       |       |   +---------------------+
    |       |       |       |       |       |   
    |       |       |       |       |       |   id: 5 type: low-level
    |       |       |       |       |       |   +----------------------+
    |       |       |       |       |       |   |loc_8048610:          |
    |       |       |       |       |       |   |sub esp, 0Ch          |
    |       |       |       |       |       |   |push offset aDUngerade|
    |       |       |       |       |       |   |call _puts            |
    |       |       |       |       |       |   |add esp, 10h          |
    |       |       |       |       |       |   +----------------------+
    |       |       |       |       |       |   
    |       |       |       |       |       |-- edges:
    |       |       |       |       |       |       3-5
    |       |       |       |       |       |       3-4
    |       |       |       |       |       
    |       |       |       |       |   id: 6 type: low-level
    |       |       |       |       |   +-------------------+
    |       |       |       |       |   |loc_8048620:       |
    |       |       |       |       |   |add [ebp+var_10], 1|
    |       |       |       |       |   +-------------------+
    |       |       |       |       |   
    |       |       |       |       |-- edges:
    |       |       |       |       |       13-6
    |       |       |       |       |       2-13
    |       |       |       |       
    |       |       |       |-- edges:
    |       |       |       |       15-14
    |       |       |       |       14-15
    |       |       |       
    |       |       |   id: 9 type: low-level
    |       |       |   +------------------+
    |       |       |   |add [ebp+var_C], 1|
    |       |       |   +------------------+
    |       |       |   
    |       |       |-- edges:
    |       |       |       16-9
    |       |       |       1-16
    |       |       
    |       |-- edges:
    |       |       17-18
    |       |       18-17
    |       
    |   id: 12 type: low-level
    |   +--------------------+
    |   |mov eax, 0          |
    |   |mov ecx, [ebp+var_4]|
    |   |leave               |
    |   |lea esp, [ecx-4]    |
    |   |retn                |
    |   |main endp           |
    |   +--------------------+
    |   
    |-- edges:
    |       19-12
    |       0-19
    
