
=== 0 0 13 ===
main proc near
var_90= dword ptr -90h
var_80= dword ptr -80h
var_30= dword ptr -30h
var_8= dword ptr -8
var_4= dword ptr -4
push ebp
mov ebp, esp
and esp, 0FFFFFFF0h
sub esp, 90
mov [esp+90h+var_4], 0
mov [esp+90h+var_8], 0
jmp short loc_804856E


=== 1 13 16 ===
loc_8048530 at 13
cmp [esp+90h+var_4], 9
jg short loc_804854C


=== 2 16 19 ===
mov eax, [esp+90h+var_4]
mov edx, [esp+90h+var_4]
mov [esp+eax*4+90h+var_30], edx


=== 3 19 25 ===
loc_804854C at 19
mov eax, [esp+90h+var_8]
mov edx, [esp+90h+var_8]
mov [esp+eax*4+90h+var_80], edx
add [esp+90h+var_4], 1
add [esp+90h+var_8], 1


=== 4 25 28 ===
loc_804856E at 25
cmp [esp+90h+var_8], 13h
jle short loc_8048530


=== 5 28 33 ===
mov [esp+90h+var_90], offset aLolData___
call _printf
leave 
retn 
main endp

0 4
1 3
1 2
2 3
3 4
4 1
4 5
postorder [5, 3, 2, 1, 4, 0]
5:nothing, singular block
3:nothing, singular block
2:nothing, singular block
1:if-then
6:block
appendable to 3 False
7:nothing, singular block
4:while-loop
8:block
appendable to 5 False
9:nothing, singular block
0:block
appendable to 9 True
9:nothing, singular block
id: 9 type: block starts at 0:
    |-- nodes:
    |   id: 0 type: low-level
    |   id: 8 type: while-loop starts at 4:
    |       body:4 condition:4 
    |       |-- nodes:
    |       |   id: 4 type: low-level
    |       |   id: 7 type: block starts at 6:
    |       |       |-- nodes:
    |       |       |   id: 6 type: if-then starts at 1:
    |       |       |       then:2 condition:1 
    |       |       |       |-- nodes:
    |       |       |       |   id: 1 type: low-level
    |       |       |       |   id: 2 type: low-level
    |       |       |       |-- edges:
    |       |       |       |       1 2
    |       |       |   id: 3 type: low-level
    |       |       |-- edges:
    |       |       |       6 3
    |       |       |       6 3
    |       |-- edges:
    |       |       7 4
    |       |       4 7
    |   id: 5 type: low-level
    |-- edges:
    |       8 5
    |       0 8
