
=== 0 0 23 ===
sub_403870 proc near
var_60= dword ptr -60h
var_5C= dword ptr -5Ch
var_58= dword ptr -58h
var_50= dword ptr -50h
var_4C= dword ptr -4Ch
var_48= dword ptr -48h
var_44= dword ptr -44h
var_3A= dword ptr -3Ah
var_28= dword ptr -28h
arg_0= tbyte ptr  10h
push ebp
push edi
push esi
mov esi, eax
push ebx
sub esp, 5Ch
fld [esp+60h+arg_0]
fld st
fstp tbyte ptr [esp+60h+var_3A+2]
fxam 
fstsw ax
and ax, 4500h


=== 1 23 25 ===
cmp ax, 100h
jz loc_403D0C


=== 2 25 29 ===
movzx edx, word ptr [esp+30h]
mov ebx, edx
and ebx, 8000h
jnz loc_403A42


=== 3 29 34 ===
loc_4038A9:
fxam 
fstsw ax
fstp st
and ax, 4500h


=== 4 34 36 ===
cmp ax, 500h
jz loc_403D1E


=== 5 36 38 ===
and dx, 7FFFh
jz loc_403A50


=== 6 38 41 ===
mov edi, [esp+60h+var_3A+2]
sub dx, 3FFFh
mov ebp, [esp+2Ch]


=== 7 41 43 ===
loc_4038D6:
mov eax, [esi+0Ch]


=== 8 43 45 ===
cmp eax, 0Eh
ja loc_40397E


=== 9 45 47 ===
test ebp, ebp
js short loc_4038FE


=== 10 47 50 ===
mov ecx, edi
mov ebx, ebp
lea esi, [esi+0]


=== 11 50 53 ===
loc_4038F0:
shld ebx, ecx, 1
add ecx, ecx


=== 12 53 55 ===
test ebx, ebx
jns short loc_4038F0


=== 13 55 57 ===
mov edi, ecx
mov ebp, ebx


=== 14 57 73 ===
loc_4038FE:
mov ecx, edi
mov ebx, ebp
shrd ecx, ebp, 1
mov edi, 4
mov [esp+60h+var_60], ecx
mov ecx, 0Eh
xor ebp, ebp
shr ebx, 1
sub ecx, eax
mov [esp+60h+var_5C], ebx
lea ebx, ds:0[ecx*4]
mov ecx, ebx
xor ebx, ebx
shld ebp, edi, cl
shl edi, cl


=== 15 73 79 ===
test cl, 20h
cmovnz ebp, edi
cmovnz edi, ebx
add [esp+60h+var_60], edi
adc [esp+60h+var_5C], ebp
mov edi, [esp+60h+var_5C]


=== 16 79 81 ===
test edi, edi
js loc_403D04


=== 17 81 87 ===
mov edi, [esp+60h+var_60]
mov ebp, [esp+60h+var_5C]
shld ebp, edi, 1
add edi, edi
mov [esp+60h+var_60], edi
mov [esp+60h+var_5C], ebp


=== 18 87 99 ===
loc_40395D:
mov ebp, [esp+60h+var_5C]
mov ecx, 0Fh
xor ebx, ebx
mov edi, [esp+60h+var_60]
sub ecx, eax
shl ecx, 2
shrd edi, ebp, cl
shr ebp, cl
and ecx, 20h
cmovnz edi, ebp
cmovnz ebp, ebx


=== 19 99 103 ===
loc_40397E:
mov ecx, ebp
or ecx, edi
jz loc_403D2E


=== 20 103 117 ===
lea ecx, [esp+60h+var_28]
mov eax, edi
mov [esp+60h+var_58], ecx
mov ebx, ecx
mov ecx, [esi+4]
mov word ptr [esp+60h+var_44], dx
mov edx, ebp
mov [esp+60h+var_48], ecx
and ecx, 800h
mov [esp+60h+var_4C], ecx
mov ecx, [esp+60h+var_48]
and ecx, 20h
mov [esp+60h+var_50], ecx
jmp short loc_4039F8


=== 21 117 118 ===
align 10h


=== 22 118 120 ===
loc_4039C0:
mov edi, [esi+0Ch]


=== 23 120 122 ===
test edi, edi
jle short loc_4039CD


=== 24 122 124 ===
sub edi, 1
mov [esi+0Ch], edi


=== 25 124 127 ===
loc_4039CD:
shrd eax, edx, 4
shr edx, 4


=== 26 127 130 ===
loc_4039D4:
test ebp, ebp
jz short loc_403A30


=== 27 130 133 ===
loc_4039D8:
cmp ebp, 9
jle short loc_403A3D


=== 28 133 136 ===
movzx ecx, byte ptr [esp+60h+var_50]
add ebp, 37h
or ebp, ecx


=== 29 136 140 ===
loc_4039E7:
mov ecx, ebp
mov [ebx], cl
add ebx, 1


=== 30 140 144 ===
loc_4039EE:
mov edi, edx
or edi, eax
jz loc_403AC0


=== 31 144 147 ===
loc_4039F8:
mov ebp, eax
and ebp, 0Fh


=== 32 147 149 ===
cmp ebp, eax
jnz short loc_4039C0


=== 33 149 151 ===
cmp ebx, [esp+60h+var_58]
ja short loc_403A16


=== 34 151 154 ===
mov edi, [esp+60h+var_4C]
test edi, edi
jnz short loc_403A16


=== 35 154 157 ===
mov ecx, [esi+0Ch]
test ecx, ecx
jle short loc_403A1C


=== 36 157 160 ===
loc_403A16:
mov byte ptr [ebx], 2Eh
add ebx, 1


=== 37 160 163 ===
loc_403A1C:
cmp edx, 0
ja short loc_403A90


=== 38 163 165 ===
cmp eax, 1
ja short loc_403A90


=== 39 165 167 ===
xor eax, eax
xor edx, edx


=== 40 167 169 ===
test ebp, ebp
jnz short loc_4039D8


=== 41 169 171 ===
db 66h
nop 


=== 42 171 174 ===
loc_403A30:
cmp ebx, [esp+60h+var_58]
ja short loc_403A3D


=== 43 174 177 ===
mov ecx, [esi+0Ch]
test ecx, ecx
js short loc_4039EE


=== 44 177 180 ===
loc_403A3D:
add ebp, 30h
jmp short loc_4039E7


=== 45 180 183 ===
loc_403A42:
or dword ptr [esi+4], 80h
jmp loc_4038A9


=== 46 183 184 ===
align 10h


=== 47 184 191 ===
loc_403A50:
mov ebp, [esp+2Ch]
xor edx, edx
mov edi, [esp+60h+var_3A+2]
mov eax, ebp
or eax, edi
jz loc_4038D6


=== 48 191 193 ===
test ebp, ebp
js loc_403D6C


=== 49 193 196 ===
mov eax, 0FFFFC001h
mov ecx, edi
mov ebx, ebp


=== 50 196 201 ===
loc_403A75:
shld ebx, ecx, 1
mov edx, eax
add ecx, ecx
sub eax, 1


=== 51 201 203 ===
test ebx, ebx
jns short loc_403A75


=== 52 203 206 ===
mov edi, ecx
mov ebp, ebx
jmp loc_4038D6


=== 53 206 207 ===
align 10h


=== 54 207 210 ===
loc_403A90:
movzx edi, word ptr [esp+60h+var_44]
sub edi, 1


=== 55 210 214 ===
loc_403A98:
shrd eax, edx, 1
mov ecx, edi
shr edx, 1


=== 56 214 217 ===
cmp edx, 0
lea edi, [ecx-1]
ja short loc_403A98


=== 57 217 219 ===
cmp eax, 1
ja short loc_403A98


=== 58 219 223 ===
mov word ptr [esp+60h+var_44], cx
xor eax, eax
xor edx, edx
jmp loc_4039D4


=== 59 223 224 ===
align 10h


=== 60 224 228 ===
loc_403AC0:
cmp ebx, [esp+60h+var_58]
movzx edx, word ptr [esp+60h+var_44]
jz loc_403D67


=== 61 228 230 ===
mov ebp, [esp+60h+var_48]
mov [esp+60h+var_4C], ebp


=== 62 230 232 ===
loc_403AD7:
mov edi, [esi+8]


=== 63 232 235 ===
test edi, edi
mov [esp+60h+var_44], edi
jle loc_403CC9


=== 64 235 240 ===
movsx edx, dx
mov eax, ebx
mov [esp+60h+var_50], edx
mov edx, [esi+0Ch]
sub eax, [esp+60h+var_58]


=== 65 240 245 ===
test edx, edx
lea ecx, [eax+edx]
mov edx, [esp+60h+var_48]
cmovg eax, ecx
and edx, 1C0h


=== 66 245 257 ===
cmp edx, 1
sbb edx, edx
lea edi, [eax+edx+6]
mov eax, [esp+60h+var_50]
mov edx, 66666667h
imul edx
mov eax, [esp+60h+var_50]
sar edx, 2
sar eax, 1Fh
mov ecx, edx
sub ecx, eax
jz loc_403D5D


=== 67 257 258 ===
mov ebp, 2


=== 68 258 268 ===
loc_403B35:
mov eax, 66666667h
add edi, 1
imul ecx
add ebp, 1
sar ecx, 1Fh
sar edx, 2
sub edx, ecx
mov ecx, edx
jnz short loc_403B35


=== 69 268 269 ===
movsx ebp, bp


=== 70 269 272 ===
loc_403B51:
cmp [esp+60h+var_44], edi
jle short loc_403BB0


=== 71 272 274 ===
mov eax, [esp+60h+var_44]
sub eax, edi


=== 72 274 276 ===
test [esp+60h+var_48], 600h
jnz loc_403CDA


=== 73 276 280 ===
lea edx, [eax-1]
test eax, eax
mov [esi+8], edx
jle short loc_403BB7


=== 74 280 286 ===
loc_403B75:
mov edx, esi
mov eax, 20h
call sub_4028D0
mov eax, [esi+8]
lea edx, [eax-1]


=== 75 286 289 ===
test eax, eax
mov [esi+8], edx
jg short loc_403B75


=== 76 289 291 ===
mov ecx, [esi+4]
mov [esp+60h+var_4C], ecx


=== 77 291 293 ===
test byte ptr [esp+60h+var_4C], 80h
jz short loc_403BBE


=== 78 293 294 ===
lea esi, [esi+0]


=== 79 294 299 ===
loc_403BA0:
mov edx, esi
mov eax, 2Dh
call sub_4028D0
jmp short loc_403BD7


=== 80 299 300 ===
align 10h


=== 81 300 302 ===
loc_403BB0:
mov dword ptr [esi+8], 0FFFFFFFFh


=== 82 302 305 ===
loc_403BB7:
test byte ptr [esp+60h+var_4C], 80h
jnz short loc_403BA0


=== 83 305 308 ===
loc_403BBE:
test [esp+60h+var_4C], 100h
jnz loc_403CE2


=== 84 308 310 ===
test byte ptr [esp+60h+var_4C], 40h
jnz loc_403CF3


=== 85 310 320 ===
loc_403BD7:
mov edx, esi
mov eax, 30h
call sub_4028D0
mov eax, [esi+4]
mov edx, esi
and eax, 20h
or eax, 58h
call sub_4028D0
mov eax, [esi+8]


=== 86 320 322 ===
test eax, eax
jle short loc_403C1F


=== 87 322 324 ===
test byte ptr [esi+5], 2
jz short loc_403C1F


=== 88 324 326 ===
sub eax, 1
mov [esi+8], eax


=== 89 326 332 ===
loc_403C06:
mov edx, esi
mov eax, 30h
call sub_4028D0
mov eax, [esi+8]
lea edx, [eax-1]


=== 90 332 335 ===
test eax, eax
mov [esi+8], edx
jg short loc_403C06


=== 91 335 339 ===
loc_403C1F:
cmp ebx, [esp+60h+var_58]
mov edi, [esp+60h+var_58]
ja short loc_403C54


=== 92 339 340 ===
jmp short loc_403C7C


=== 93 340 341 ===
align 10h


=== 94 341 343 ===
loc_403C30:
movzx eax, word ptr [esi+1Ch]


=== 95 343 346 ===
test ax, ax
mov word ptr [esp+60h+var_3A], ax
jz short loc_403C50


=== 96 346 352 ===
mov ecx, esi
mov edx, 1
lea eax, [esp+60h+var_3A]
call sub_402930
db 66h
nop 


=== 97 352 355 ===
loc_403C50:
cmp ebx, edi
jz short loc_403C7C


=== 98 355 358 ===
loc_403C54:
sub ebx, 1
movsx eax, byte ptr [ebx]


=== 99 358 360 ===
cmp eax, 2Eh
jz short loc_403CC0


=== 100 360 362 ===
cmp eax, 2Ch
jz short loc_403C30


=== 101 362 365 ===
mov edx, esi
call sub_4028D0
jmp short loc_403C50


=== 102 365 366 ===
align 10h


=== 103 366 370 ===
loc_403C70:
mov edx, esi
mov eax, 30h
call sub_4028D0


=== 104 370 373 ===
loc_403C7C:
mov eax, [esi+0Ch]
lea edx, [eax-1]


=== 105 373 376 ===
test eax, eax
mov [esi+0Ch], edx
jg short loc_403C70


=== 106 376 388 ===
mov eax, [esi+4]
mov edx, esi
and eax, 20h
or eax, 50h
call sub_4028D0
mov eax, [esp+60h+var_50]
mov ecx, esi
add [esi+8], ebp
or dword ptr [esi+4], 1C0h
mov edx, eax
sar edx, 1Fh
call sub_402B70


=== 107 388 396 ===
loc_403CB3:
add esp, 5Ch
pop ebx
pop esi
pop edi
pop ebp
retn 
align 10h


=== 108 396 400 ===
loc_403CC0:
mov eax, esi
call sub_403140
jmp short loc_403C50


=== 109 400 405 ===
loc_403CC9:
movsx edx, dx
mov ebp, 2
mov [esp+60h+var_50], edx
jmp loc_403BB7


=== 110 405 408 ===
loc_403CDA:
mov [esi+8], eax
jmp loc_403BB7


=== 111 408 413 ===
loc_403CE2:
mov edx, esi
mov eax, 2Bh
call sub_4028D0
jmp loc_403BD7


=== 112 413 418 ===
loc_403CF3:
mov edx, esi
mov eax, 20h
call sub_4028D0
jmp loc_403BD7


=== 113 418 421 ===
loc_403D04:
add edx, 1
jmp loc_40395D


=== 114 421 428 ===
loc_403D0C:
fstp st
mov ecx, esi
mov edx, offset unk_409284
xor eax, eax
call sub_402AD0
jmp short loc_403CB3


=== 115 428 434 ===
loc_403D1E:
mov ecx, esi
mov edx, offset unk_409288
mov eax, ebx
call sub_402AD0
jmp short loc_403CB3


=== 116 434 439 ===
loc_403D2E:
mov edi, [esi+4]
lea ebx, [esp+60h+var_28]
mov [esp+60h+var_58], ebx
mov [esp+60h+var_48], edi


=== 117 439 442 ===
loc_403D3D:
test eax, eax
jle short loc_403D76


=== 118 442 444 ===
mov ecx, [esp+60h+var_48]
mov [esp+60h+var_4C], ecx


=== 119 444 447 ===
loc_403D49:
mov byte ptr [esp+60h+var_28], 2Eh
lea ebx, [esp+60h+var_28+1]


=== 120 447 451 ===
loc_403D52:
mov byte ptr [ebx], 30h
add ebx, 1
jmp loc_403AD7


=== 121 451 454 ===
loc_403D5D:
mov ebp, 2
jmp loc_403B51


=== 122 454 457 ===
loc_403D67:
mov eax, [esi+0Ch]
jmp short loc_403D3D


=== 123 457 460 ===
loc_403D6C:
mov edx, 0FFFFC002h
jmp loc_4038D6


=== 124 460 462 ===
loc_403D76:
mov ebx, [esp+60h+var_48]


=== 125 462 466 ===
test [esp+60h+var_48], 800h
mov [esp+60h+var_4C], ebx
mov ebx, [esp+60h+var_58]
jz short loc_403D52


=== 126 466 467 ===
jmp short loc_403D49

0-1
1-114
1-2
2-45
2-3
3-4
4-115
4-5
5-47
5-6
6-7
7-8
8-19
8-9
9-14
9-10
10-11
11-12
12-11
12-13
13-14
14-15
15-16
16-113
16-17
17-18
18-19
19-116
19-20
20-31
21-22
22-23
23-25
23-24
24-25
25-26
26-42
26-27
27-44
27-28
28-29
29-30
30-60
30-31
31-32
32-22
32-33
33-36
33-34
34-36
34-35
35-37
35-36
36-37
37-54
37-38
38-54
38-39
39-40
40-27
40-41
41-42
42-44
42-43
43-30
43-44
44-29
45-3
46-47
47-7
47-48
48-123
48-49
49-50
50-51
51-50
51-52
52-7
53-54
54-55
55-56
56-55
56-57
57-55
57-58
58-26
59-60
60-122
60-61
61-62
62-63
63-109
63-64
64-65
65-66
66-121
66-67
67-68
68-68
68-69
69-70
70-81
70-71
71-72
72-110
72-73
73-82
73-74
74-75
75-74
75-76
76-77
77-83
77-78
78-79
79-85
80-81
81-82
82-79
82-83
83-111
83-84
84-112
84-85
85-86
86-91
86-87
87-91
87-88
88-89
89-90
90-89
90-91
91-98
91-92
92-104
93-94
94-95
95-97
95-96
96-97
97-104
97-98
98-99
99-108
99-100
100-94
100-101
101-97
102-103
103-104
104-105
105-103
105-106
106-107
107-108
108-97
109-82
110-82
111-85
112-85
113-18
114-107
115-107
116-117
117-124
117-118
118-119
119-120
120-62
121-70
122-117
123-7
124-125
125-120
125-126
126-119
==================
Analyzer is reducing graph ...
Postorder of dfs-tree: [45, 123, 52, 51, 50, 49, 48, 47, 17, 116, 25, 24, 23, 22, 41, 40, 39, 28, 27, 61, 118, 119, 126, 109, 69, 68, 67, 110, 78, 77, 76, 75, 74, 73, 72, 71, 79, 111, 90, 89, 88, 87, 92, 91, 86, 85, 112, 84, 83, 82, 81, 70, 121, 66, 65, 64, 63, 62, 120, 125, 124, 117, 122, 60, 30, 29, 44, 43, 42, 26, 58, 57, 56, 55, 54, 38, 37, 36, 35, 34, 33, 32, 31, 20, 19, 18, 113, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 115, 4, 3, 2, 96, 95, 94, 101, 100, 99, 98, 103, 106, 105, 104, 97, 108, 107, 114, 1, 0]
==================
analyzing node 45 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [45]
found nothing, block is singular.
==================
analyzing node 123 ...
