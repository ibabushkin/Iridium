
=== 0 0 27 ===
sub_4063B0 proc near
var_68= dword ptr -68h
var_64= dword ptr -64h
var_50= dword ptr -50h
var_4C= dword ptr -4Ch
var_44= dword ptr -44h
var_40= dword ptr -40h
var_3C= dword ptr -3Ch
var_38= dword ptr -38h
var_34= dword ptr -34h
var_30= dword ptr -30h
var_2C= dword ptr -2Ch
var_28= dword ptr -28h
var_24= dword ptr -24h
var_20= dword ptr -20h
var_1C= dword ptr -1Ch
arg_0= dword ptr  8
arg_4= dword ptr  0Ch
push ebp
xor eax, eax
push edi
push esi
push ebx
sub esp, 5Ch
mov ecx, [esp+68h+arg_4]
mov ebx, [esp+68h+arg_0]
mov edx, [ecx+10h]


=== 1 27 29 ===
cmp edx, [ebx+10h]
jg loc_4065C3


=== 2 29 46 ===
add ebx, 14h
mov ebp, ecx
mov [esp+68h+var_24], ebx
mov ebx, [esp+68h+arg_4]
lea esi, [edx-1]
mov [esp+68h+var_28], esi
mov esi, [esp+68h+arg_0]
add edx, 3
lea ecx, [ecx+edx*4+4]
add ebp, 14h
mov [esp+68h+var_30], ecx
mov ebx, [ebx+edx*4+4]
mov eax, [esi+edx*4+4]
xor edx, edx
mov ecx, ebx
add ecx, 1
div ecx


=== 3 46 50 ===
test eax, eax
mov [esp+68h+var_2C], eax
mov [esp+68h+var_20], eax
jz loc_4064FF


=== 4 50 61 ===
mov eax, [esp+68h+var_24]
xor esi, esi
xor edi, edi
mov [esp+68h+var_44], ebp
mov ecx, esi
mov ebx, edi
mov [esp+68h+var_1C], ebp
mov [esp+68h+var_40], 0
mov [esp+68h+var_3C], 0
mov ebp, eax
lea esi, [esi+0]


=== 5 61 89 ===
loc_406440:
mov esi, [esp+68h+var_44]
mov eax, [esp+68h+var_2C]
mov [esp+68h+var_34], 0
mul dword ptr [esi]
mov [esp+68h+var_50], eax
add [esp+68h+var_50], ecx
mov eax, [esp+68h+var_50]
mov [esp+68h+var_4C], edx
adc [esp+68h+var_4C], ebx
add esi, 4
mov ebx, [esp+68h+var_4C]
xor edi, edi
mov [esp+68h+var_44], esi
mov esi, [ebp+0]
mov [esp+68h+var_38], eax
mov ecx, ebx
xor ebx, ebx
sub esi, [esp+68h+var_38]
sbb edi, [esp+68h+var_34]
sub esi, [esp+68h+var_40]
sbb edi, [esp+68h+var_3C]
mov [esp+68h+var_3C], 0
mov [ebp+0], esi
mov esi, [esp+68h+var_44]
add ebp, 4
mov eax, edi
and eax, 1


=== 6 89 92 ===
cmp [esp+68h+var_30], esi
mov [esp+68h+var_40], eax
jnb short loc_406440


=== 7 92 97 ===
mov eax, [esp+68h+var_28]
mov ecx, [esp+68h+arg_0]
mov ebp, [esp+68h+var_1C]
add eax, 4
mov edi, [ecx+eax*4+4]


=== 8 97 99 ===
test edi, edi
jnz short loc_4064FF


=== 9 99 102 ===
lea eax, [ecx+eax*4]
cmp [esp+68h+var_24], eax
jnb short loc_4064F4


=== 10 102 105 ===
mov esi, [eax]
test esi, esi
jnz short loc_4064F4


=== 11 105 108 ===
mov ecx, [esp+68h+var_24]
mov edx, [esp+68h+var_28]
jmp short loc_4064E6


=== 12 108 109 ===
align 10h


=== 13 109 111 ===
loc_4064E0:
mov ebx, [eax]


=== 14 111 113 ===
test ebx, ebx
jnz short loc_4064F0


=== 15 113 116 ===
loc_4064E6:
sub eax, 4
sub edx, 1


=== 16 116 118 ===
cmp ecx, eax
jb short loc_4064E0


=== 17 118 120 ===
loc_4064F0:
mov [esp+68h+var_28], edx


=== 18 120 124 ===
loc_4064F4:
mov esi, [esp+68h+var_28]
mov ebx, [esp+68h+arg_0]
mov [ebx+10h], esi


=== 19 124 130 ===
loc_4064FF:
mov ecx, [esp+68h+arg_4]
mov ebx, [esp+68h+arg_0]
mov [esp+68h+var_64], ecx
mov [esp+68h+var_68], ebx
call sub_406DA0


=== 20 130 132 ===
test eax, eax
js loc_4065BF


=== 21 132 140 ===
mov esi, [esp+68h+var_2C]
xor ebx, ebx
mov ecx, [esp+68h+var_24]
mov [esp+68h+var_40], ebp
add esi, 1
mov [esp+68h+var_44], ecx
xor ecx, ecx
mov [esp+68h+var_20], esi


=== 22 140 159 ===
loc_406536:
mov eax, [esp+68h+var_40]
xor edi, edi
xor edx, edx
mov ebp, [esp+68h+var_44]
mov esi, [eax]
add eax, 4
mov [esp+68h+var_40], eax
mov eax, [ebp+0]
sub eax, esi
sbb edx, edi
sub eax, ecx
sbb edx, ebx
xor ebx, ebx
mov [ebp+0], eax
mov ecx, edx
mov eax, [esp+68h+var_40]
add ebp, 4
and ecx, 1


=== 23 159 162 ===
cmp [esp+68h+var_30], eax
mov [esp+68h+var_44], ebp
jnb short loc_406536


=== 24 162 166 ===
mov eax, [esp+68h+var_28]
mov ecx, [esp+68h+arg_0]
add eax, 4
mov edi, [ecx+eax*4+4]


=== 25 166 168 ===
test edi, edi
jnz short loc_4065BF


=== 26 168 171 ===
lea eax, [ecx+eax*4]
cmp [esp+68h+var_24], eax
jnb short loc_4065B4


=== 27 171 174 ===
mov esi, [eax]
test esi, esi
jnz short loc_4065B4


=== 28 174 177 ===
mov ecx, [esp+68h+var_24]
mov edx, [esp+68h+var_28]
jmp short loc_4065A6


=== 29 177 178 ===
align 10h


=== 30 178 180 ===
loc_4065A0:
mov ebx, [eax]


=== 31 180 182 ===
test ebx, ebx
jnz short loc_4065B0


=== 32 182 185 ===
loc_4065A6:
sub eax, 4
sub edx, 1


=== 33 185 187 ===
cmp ecx, eax
jb short loc_4065A0


=== 34 187 189 ===
loc_4065B0:
mov [esp+68h+var_28], edx


=== 35 189 193 ===
loc_4065B4:
mov esi, [esp+68h+var_28]
mov ebx, [esp+68h+arg_0]
mov [ebx+10h], esi


=== 36 193 195 ===
loc_4065BF:
mov eax, [esp+68h+var_20]


=== 37 195 203 ===
loc_4065C3:
add esp, 5Ch
pop ebx
pop esi
pop edi
pop ebp
retn 
sub_4063B0 endp

0-1
1-37
1-2
2-3
3-19
3-4
4-5
5-6
6-5
6-7
7-8
8-19
8-9
9-18
9-10
10-18
10-11
11-15
12-13
13-14
14-17
14-15
15-16
16-13
16-17
17-18
18-19
19-20
20-36
20-21
21-22
22-23
23-22
23-24
24-25
25-36
25-26
26-35
26-27
27-35
27-28
28-32
29-30
30-31
31-34
31-32
32-33
33-30
33-34
34-35
35-36
36-37
==================
Analyzer is reducing graph ...
Postorder of dfs-tree: [14, 13, 17, 16, 15, 11, 10, 18, 9, 8, 7, 6, 5, 4, 31, 30, 34, 33, 32, 28, 35, 27, 26, 25, 24, 23, 22, 21, 37, 36, 20, 19, 3, 2, 1, 0]
==================
analyzing node 14 ...
target of backedge  ... False
branching ... True
couldn't find simple structure.
found knot-node: 17
block: [37]
found nothing, block is singular.
==================
analyzing node 13 ...
target of backedge  ... 12
branching ... False
loop... True
found simple structure.
block: [13, 14]
appendable to 14 ... False
reduction successful.
current nodeset: | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 15 | 16 | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 32 | 33 | 34 | 35 | 36 | 37 | 38 | 
current edgeset: | 10-11 | 34-35 | 27-28 | 25-26 | 10-18 | 18-19 | 26-35 | 21-22 | 19-20 | 16-17 | 16-38 | 28-32 | 17-18 | 1-37 | 23-22 | 23-24 | 32-33 | 15-16 | 20-21 | 3-19 | 27-35 | 5-6 | 11-15 | 2-3 | 36-37 | 0-1 | 8-19 | 24-25 | 1-2 | 29-30 | 26-27 | 25-36 | 33-30 | 38-17 | 9-18 | 6-7 | 6-5 | 9-10 | 22-23 | 38-15 | 7-8 | 4-5 | 30-31 | 3-4 | 33-34 | 35-36 | 31-32 | 8-9 | 12-38 | 20-36 | 31-34 | 
applying recursive analysis ...
==================
analyzing node 38 ...
target of backedge  ... 12
branching ... True
loop... True
couldn't find simple structure.
found knot-node: 38
==================
analyzing node 17 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [17]
found nothing, block is singular.
==================
analyzing node 16 ...
target of backedge  ... False
branching ... True
couldn't find simple structure.
found knot-node: 17
==================
analyzing node 15 ...
target of backedge  ... 38
branching ... False
loop... False
found simple structure.
block: [16, 15]
appendable to 16 ... False
reduction successful.
current nodeset: | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 17 | 18 | 19 | 20 | 21 | 22 | 23 | 24 | 25 | 26 | 27 | 28 | 29 | 30 | 31 | 32 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 
current edgeset: | 10-11 | 35-36 | 2-3 | 25-26 | 10-18 | 36-37 | 26-35 | 3-4 | 8-9 | 19-20 | 34-35 | 33-34 | 28-32 | 1-37 | 23-22 | 23-24 | 39-17 | 20-21 | 3-19 | 27-35 | 6-7 | 5-6 | 39-38 | 0-1 | 8-19 | 24-25 | 11-39 | 1-2 | 29-30 | 26-27 | 25-36 | 33-30 | 32-33 | 9-18 | 21-22 | 6-5 | 9-10 | 4-5 | 18-19 | 22-23 | 30-31 | 17-18 | 7-8 | 38-17 | 31-32 | 27-28 | 12-38 | 38-39 | 20-36 | 31-34 | 
applying recursive analysis ...
==================
analyzing node 39 ...
target of backedge  ... 38
branching ... True
loop... False
couldn't find simple structure.
found knot-node: 17
==================
analyzing node 11 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [11]
found nothing, block is singular.
==================
analyzing node 10 ...
target of backedge  ... False
branching ... True
couldn't find simple structure.
found knot-node: 18
==================
analyzing node 18 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [18]
found nothing, block is singular.
==================
analyzing node 9 ...
target of backedge  ... False
branching ... True
couldn't find simple structure.
