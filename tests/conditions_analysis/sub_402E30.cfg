
=== 0 0 19 ===
sub_402E30 proc near
var_38= dword ptr -38h
var_34= dword ptr -34h
var_30= dword ptr -30h
var_2C= dword ptr -2Ch
var_28= dword ptr -28h
var_24= dword ptr -24h
var_20= dword ptr -20h
var_1C= dword ptr -1Ch
var_C= dword ptr -0Ch
arg_0= dword ptr  8
push ebp
mov ebp, esp
push edi
mov edi, ecx
push esi
mov esi, edx
push ebx
sub esp, 2Ch


=== 1 19 37 ===
cmp eax, 6Fh
mov [ebp+var_28], eax
mov eax, 18h
mov [ebp+var_34], ecx
mov ecx, 12h
cmovz ecx, eax
setnz al
movzx ebx, al
movzx eax, al
add eax, 3
mov [ebp+var_1C], eax
mov eax, [ebp+arg_0]
lea ebx, ds:7[ebx*8]
mov [ebp+var_20], edx
mov eax, [eax+0Ch]
mov [ebp+var_2C], eax
mov edx, [ebp+var_2C]
xor eax, eax


=== 2 37 45 ===
test edx, edx
mov edx, [ebp+arg_0]
cmovns eax, [ebp+var_2C]
mov edx, [edx+4]
add ecx, eax
mov [ebp+var_38], edx
and dh, 10h
jz short loc_402E9E


=== 3 45 48 ===
mov eax, [ebp+arg_0]
cmp word ptr [eax+1Ch], 0
jnz loc_4030C0


=== 4 48 51 ===
loc_402E9E:
mov edx, [ebp+arg_0]
mov edx, [edx+8]


=== 5 51 62 ===
cmp ecx, edx
cmovl ecx, edx
lea eax, [ecx+0Fh]
and eax, 0FFFFFFF0h
mov [ebp+var_30], edx
call sub_4026E0
sub esp, eax
mov eax, [ebp+var_34]
or eax, [ebp+var_20]
mov [ebp+var_24], esp
jz loc_403120


=== 6 62 70 ===
mov eax, [ebp+var_28]
mov edx, ebx
mov ebx, esp
mov ecx, [ebp+var_1C]
mov byte ptr [ebp+var_1C], dl
and eax, 20h
mov [ebp+var_20], eax
jmp short loc_402EF9


=== 7 70 71 ===
align 10h


=== 8 71 73 ===
loc_402EE0:
mov [ebx-1], dl


=== 9 73 77 ===
loc_402EE3:
shrd esi, edi, cl
xor eax, eax
shr edi, cl


=== 10 77 83 ===
test cl, 20h
cmovnz esi, edi
cmovnz edi, eax
mov edx, edi
or edx, esi
jz short loc_402F15


=== 11 83 88 ===
loc_402EF9:
movzx eax, byte ptr [ebp+var_1C]
add ebx, 1
and eax, esi
lea edx, [eax+30h]


=== 12 88 90 ===
cmp dl, 39h
jle short loc_402EE0


=== 13 90 94 ===
add eax, 37h
or al, byte ptr [ebp+var_20]
mov [ebx-1], al
jmp short loc_402EE3


=== 14 94 97 ===
loc_402F15:
cmp [ebp+var_24], ebx
jz loc_403120


=== 15 97 99 ===
loc_402F1E:
mov eax, [ebp+var_2C]


=== 16 99 101 ===
test eax, eax
jle loc_4030D7


=== 17 101 104 ===
mov eax, [ebp+var_24]
sub eax, ebx
add eax, [ebp+var_2C]


=== 18 104 106 ===
test eax, eax
jle loc_4030D7


=== 19 106 109 ===
add eax, ebx
nop 
lea esi, [esi+0]


=== 20 109 112 ===
loc_402F40:
mov byte ptr [ebx], 30h
add ebx, 1


=== 21 112 114 ===
cmp ebx, eax
jnz short loc_402F40


=== 22 114 117 ===
loc_402F4A:
cmp ebx, [ebp+var_24]
jz loc_403100


=== 23 117 120 ===
loc_402F53:
mov eax, ebx
sub eax, [ebp+var_24]


=== 24 120 122 ===
cmp [ebp+var_30], eax
jle loc_403003


=== 25 122 125 ===
mov edi, [ebp+var_30]
sub edi, eax
mov eax, [ebp+arg_0]


=== 26 125 128 ===
test edi, edi
mov [eax+8], edi
jle short loc_402F91


=== 27 128 130 ===
cmp [ebp+var_28], 6Fh
jz short loc_402F83


=== 28 130 133 ===
mov eax, [ebp+arg_0]
test byte ptr [eax+5], 8
jnz loc_403072


=== 29 133 136 ===
loc_402F83:
mov edx, [ebp+arg_0]
mov eax, [edx+0Ch]


=== 30 136 138 ===
test eax, eax
js loc_403089


=== 31 138 140 ===
loc_402F91:
lea esi, [edi-1]


=== 32 140 143 ===
loc_402F94:
cmp [ebp+var_28], 6Fh
jz short loc_402FA7


=== 33 143 146 ===
mov eax, [ebp+arg_0]
test byte ptr [eax+5], 8
jnz loc_403060


=== 34 146 149 ===
loc_402FA7:
test edi, edi
jle short loc_402FB4


=== 35 149 152 ===
mov eax, [ebp+arg_0]
test byte ptr [eax+5], 4
jz short loc_403020


=== 36 152 155 ===
loc_402FB4:
cmp ebx, [ebp+var_24]
jbe short loc_402FDE


=== 37 155 160 ===
mov [ebp+var_1C], edi
mov edi, [ebp+var_24]
mov [ebp+var_24], esi
mov esi, ebx
mov ebx, [ebp+arg_0]


=== 38 160 165 ===
loc_402FC7:
sub esi, 1
mov edx, ebx
movsx eax, byte ptr [esi]
call sub_4028D0


=== 39 165 167 ===
cmp esi, edi
jnz short loc_402FC7


=== 40 167 169 ===
mov edi, [ebp+var_1C]
mov esi, [ebp+var_24]


=== 41 169 173 ===
loc_402FDE:
test edi, edi
mov ebx, [ebp+arg_0]
jle short loc_402FFB


=== 42 173 179 ===
loc_402FE5:
mov eax, 20h
sub esi, 1
mov edx, ebx
call sub_4028D0
lea eax, [esi+1]


=== 43 179 181 ===
test eax, eax
jg short loc_402FE5


=== 44 181 188 ===
loc_402FFB:
lea esp, [ebp-0Ch]
pop ebx
pop esi
pop edi
pop ebp
retn 


=== 45 188 194 ===
loc_403003:
mov edx, [ebp+arg_0]
mov esi, 0FFFFFFFEh
mov edi, 0FFFFFFFFh
mov dword ptr [edx+8], 0FFFFFFFFh
jmp loc_402F94


=== 46 194 195 ===
align 10h


=== 47 195 199 ===
loc_403020:
mov edi, [ebp+arg_0]
mov [ebp+var_1C], ebx
mov ebx, esi


=== 48 199 205 ===
loc_403028:
mov eax, 20h
sub ebx, 1
mov edx, edi
call sub_4028D0
lea eax, [ebx+1]


=== 49 205 207 ===
test eax, eax
jg short loc_403028


=== 50 207 215 ===
xor eax, eax
test esi, esi
mov ebx, [ebp+var_1C]
lea edi, [esi-1]
cmovns eax, esi
sub edi, eax
lea esi, [edi-1]
jmp loc_402FB4


=== 51 215 219 ===
loc_403055:
lea esi, [edi-3]
mov edi, eax
lea esi, [esi+0]


=== 52 219 225 ===
loc_403060:
movzx edx, byte ptr [ebp+var_28]
mov byte ptr [ebx+1], 30h
mov [ebx], dl
add ebx, 2
jmp loc_402FA7


=== 53 225 227 ===
loc_403072:
lea eax, [edi-2]


=== 54 227 229 ===
test eax, eax
jle short loc_403055


=== 55 229 232 ===
mov edx, [ebp+arg_0]
mov edi, eax
mov eax, [edx+0Ch]


=== 56 232 234 ===
test eax, eax
jns loc_402F91


=== 57 234 238 ===
loc_403089:
mov edx, [ebp+arg_0]
mov eax, [edx+4]
and eax, 600h


=== 58 238 240 ===
cmp eax, 200h
jnz loc_402F91


=== 59 240 241 ===
lea eax, [ebx+edi]


=== 60 241 244 ===
loc_4030A2:
mov byte ptr [ebx], 30h
add ebx, 1


=== 61 244 246 ===
cmp ebx, eax
jnz short loc_4030A2


=== 62 246 249 ===
mov esi, 0FFFFFFFEh
mov edi, 0FFFFFFFFh
jmp loc_402F94


=== 63 249 250 ===
align 10h


=== 64 250 259 ===
loc_4030C0:
mov eax, ecx
mov edx, 55555556h
imul edx
mov eax, ecx
sar eax, 1Fh
sub edx, eax
add ecx, edx
jmp loc_402E9E


=== 65 259 262 ===
loc_4030D7:
cmp [ebp+var_28], 6Fh
jnz loc_402F4A


=== 66 262 265 ===
mov eax, [ebp+arg_0]
test byte ptr [eax+5], 8
jz loc_402F4A


=== 67 265 268 ===
mov byte ptr [ebx], 30h
add ebx, 1
jmp loc_402F4A


=== 68 268 269 ===
align 10h


=== 69 269 272 ===
loc_403100:
mov edx, [ebp+arg_0]
mov eax, [edx+0Ch]


=== 70 272 274 ===
test eax, eax
jz loc_402F53


=== 71 274 277 ===
mov byte ptr [ebx], 30h
add ebx, 1
jmp loc_402F53


=== 72 277 278 ===
align 10h


=== 73 278 285 ===
loc_403120:
mov eax, [ebp+var_38]
mov edx, [ebp+arg_0]
mov ebx, [ebp+var_24]
and ah, 0F7h
mov [edx+4], eax
jmp loc_402F1E

0-1
1-2
2-4
2-3
3-64
3-4
4-5
5-73
5-6
6-11
7-8
8-9
9-10
10-14
10-11
11-12
12-8
12-13
13-9
14-73
14-15
15-16
16-65
16-17
17-18
18-65
18-19
19-20
20-21
21-20
21-22
22-69
22-23
23-24
24-45
24-25
25-26
26-31
26-27
27-29
27-28
28-53
28-29
29-30
30-57
30-31
31-32
32-34
32-33
33-52
33-34
34-36
34-35
35-47
35-36
36-41
36-37
37-38
38-39
39-38
39-40
40-41
41-44
41-42
42-43
43-42
43-44
45-32
46-47
47-48
48-49
49-48
49-50
50-36
51-52
52-34
53-54
54-51
54-55
55-56
56-31
56-57
57-58
58-31
58-59
59-60
60-61
61-60
61-62
62-32
63-64
64-4
65-22
65-66
66-22
66-67
67-22
68-69
69-70
70-23
70-71
71-23
72-73
73-15
==================
Analyzer is reducing graph ...
Postorder of dfs-tree: [13, 14, 10, 9, 8, 12, 11, 6, 21, 20, 19, 18, 17, 45, 30, 29, 31, 33, 32, 62, 61, 60, 59, 58, 57, 56, 55, 50, 49, 48, 47, 40, 39, 38, 37, 44, 43, 42, 41, 36, 35, 34, 52, 51, 54, 53, 28, 27, 26, 25, 24, 23, 71, 70, 69, 22, 67, 66, 65, 16, 15, 73, 5, 4, 64, 3, 2, 1, 0]
==================
analyzing node 13 ...
