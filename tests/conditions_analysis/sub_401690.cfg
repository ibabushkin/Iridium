
=== 0 0 12 ===
sub_401690 proc near
var_28= dword ptr -28h
var_24= dword ptr -24h
var_20= dword ptr -20h
var_10= dword ptr -10h
var_C= dword ptr -0Ch
arg_0= dword ptr  8
push ebx
sub esp, 28h
mov eax, ds:dword_40AD90
mov [esp+28h+var_28], eax
call sub_401670


=== 1 12 15 ===
cmp eax, 0FFFFFFFFh
mov [esp+28h+var_10], eax
jz loc_401730


=== 2 15 48 ===
mov [esp+28h+var_28], 8
call _lock
mov eax, ds:dword_40AD90
mov [esp+28h+var_28], eax
call sub_401670
mov [esp+28h+var_10], eax
mov eax, ds:dword_40AD8C
mov [esp+28h+var_28], eax
call sub_401670
mov [esp+28h+var_C], eax
lea eax, [esp+28h+var_C]
mov [esp+28h+var_20], eax
lea eax, [esp+28h+var_10]
mov [esp+28h+var_24], eax
mov eax, [esp+28h+arg_0]
mov [esp+28h+var_28], eax
call __dllonexit
mov ebx, eax
mov eax, [esp+28h+var_10]
mov [esp+28h+var_28], eax
call sub_401680
mov ds:dword_40AD90, eax
mov eax, [esp+28h+var_C]
mov [esp+28h+var_28], eax
call sub_401680
mov [esp+28h+var_28], 8
mov ds:dword_40AD8C, eax
call _unlock
add esp, 28h
mov eax, ebx
pop ebx
retn 
align 10h


=== 3 48 58 ===
loc_401730:
mov eax, [esp+28h+arg_0]
mov [esp+28h+var_28], eax
call ds:_onexit
add esp, 28h
mov ebx, eax
mov eax, ebx
pop ebx
retn 
sub_401690 endp

0-1
1-3
1-2
2-3
==================
Analyzer is reducing graph ...
Postorder of dfs-tree: [3, 2, 1, 0]
==================
analyzing node 3 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [3]
found nothing, block is singular.
==================
analyzing node 2 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [2]
found nothing, block is singular.
==================
analyzing node 1 ...
target of backedge  ... False
branching ... True
found simple structure.
if-then: [1, 2]
reduction successful.
current nodeset: | 0 | 3 | 4 | 
current edgeset: | 0-4 | 4-3 | 
applying recursive analysis ...
==================
analyzing node 4 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [3, 4]
appendable to 3 ... False
reduction successful.
current nodeset: | 0 | 5 | 
current edgeset: | 0-5 | 
applying recursive analysis ...
==================
analyzing node 5 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [5]
found nothing, block is singular.
==================
analyzing node 0 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [0, 5]
appendable to 5 ... True
appending to existing block ... done: 5
reduction successful.
current nodeset: | 5 | 
applying recursive analysis ...
==================
analyzing node 5 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [5]
found nothing, block is singular.
==================RESULTS==================
Graph starting at node 5
id: 5 type: block starts at 0:
    |-- nodes:
    |   id: 0 type: low-level
    |   +-------------------------+
    |   |sub_401690 proc near     |
    |   |var_28= dword ptr -28h   |
    |   |var_24= dword ptr -24h   |
    |   |var_20= dword ptr -20h   |
    |   |var_10= dword ptr -10h   |
    |   |var_C= dword ptr -0Ch    |
    |   |arg_0= dword ptr  8      |
    |   |push ebx                 |
    |   |sub esp, 28h             |
    |   |mov eax, ds:dword_40AD90 |
    |   |mov [esp+28h+var_28], eax|
    |   |call sub_401670          |
    |   +-------------------------+
    |   
    |   id: 4 type: if-then starts at 1:
    |       then:2 condition:1 
    |       |-- nodes:
    |       |   id: 1 type: low-level
    |       |   +-------------------------+
    |       |   |cmp eax, 0FFFFFFFFh      |
    |       |   |mov [esp+28h+var_10], eax|
    |       |   |jz loc_401730            |
    |       |   +-------------------------+
    |       |   
    |       |   id: 2 type: low-level
    |       |   +-------------------------+
    |       |   |mov [esp+28h+var_28], 8  |
    |       |   |call _lock               |
    |       |   |mov eax, ds:dword_40AD90 |
    |       |   |mov [esp+28h+var_28], eax|
    |       |   |call sub_401670          |
    |       |   |mov [esp+28h+var_10], eax|
    |       |   |mov eax, ds:dword_40AD8C |
    |       |   |mov [esp+28h+var_28], eax|
    |       |   |call sub_401670          |
    |       |   |mov [esp+28h+var_C], eax |
    |       |   |lea eax, [esp+28h+var_C] |
    |       |   |mov [esp+28h+var_20], eax|
    |       |   |lea eax, [esp+28h+var_10]|
    |       |   |mov [esp+28h+var_24], eax|
    |       |   |mov eax, [esp+28h+arg_0] |
    |       |   |mov [esp+28h+var_28], eax|
    |       |   |call __dllonexit         |
    |       |   |mov ebx, eax             |
    |       |   |mov eax, [esp+28h+var_10]|
    |       |   |mov [esp+28h+var_28], eax|
    |       |   |call sub_401680          |
    |       |   |mov ds:dword_40AD90, eax |
    |       |   |mov eax, [esp+28h+var_C] |
    |       |   |mov [esp+28h+var_28], eax|
    |       |   |call sub_401680          |
    |       |   |mov [esp+28h+var_28], 8  |
    |       |   |mov ds:dword_40AD8C, eax |
    |       |   |call _unlock             |
    |       |   |add esp, 28h             |
    |       |   |mov eax, ebx             |
    |       |   |pop ebx                  |
    |       |   |retn                     |
    |       |   |align 10h                |
    |       |   +-------------------------+
    |       |   
    |       |-- edges:
    |       |       1-2
    |       
    |   id: 3 type: low-level
    |   +-------------------------+
    |   |loc_401730:              |
    |   |mov eax, [esp+28h+arg_0] |
    |   |mov [esp+28h+var_28], eax|
    |   |call ds:_onexit          |
    |   |add esp, 28h             |
    |   |mov ebx, eax             |
    |   |mov eax, ebx             |
    |   |pop ebx                  |
    |   |retn                     |
    |   |sub_401690 endp          |
    |   +-------------------------+
    |   
    |-- edges:
    |       4-3
    |       0-4
    
