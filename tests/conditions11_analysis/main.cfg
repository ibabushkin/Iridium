
=== 0 0 14 ===
main proc near
var_20= dword ptr -20h
var_C= dword ptr -0Ch
var_8= dword ptr -8
var_4= dword ptr -4
push ebp
mov ebp, esp
and esp, 0FFFFFFF0h
sub esp, 20
mov [esp+20h+var_4], 0
mov [esp+20h+var_8], 1
mov [esp+20h+var_C], 2
cmp [esp+20h+var_4], 0
jz short loc_8048542


=== 1 14 16 ===
cmp [esp+20h+var_8], 1
jz short loc_8048542


=== 2 16 18 ===
cmp [esp+20h+var_C], 2
jnz short loc_804854E


=== 3 18 21 ===
loc_8048542 at 18
mov [esp+20h+var_20], offset aTrue
call _printf


=== 4 21 26 ===
loc_804854E at 21
mov eax, 0
leave 
retn 
main endp

0 3
0 1
1 3
1 2
2 4
2 3
3 4
postorder [4, 3, 2, 1, 0]
4:nothing, singular block
3:nothing, singular block
2:nothing
1: if-then-with-or
5:block
appendable to 4 False
6:nothing, singular block
0:block
appendable to 6 True
6:nothing, singular block
id: 6 type: block starts at 0:
    |-- nodes:
    |   id: 0 type: low-level
    |   id: 5 type: if-then-with-or starts at 1:
    |       then:3 condition2:2 condition1:1 
    |       |-- nodes:
    |       |   id: 1 type: low-level
    |       |   id: 2 type: low-level
    |       |   id: 3 type: low-level
    |       |-- edges:
    |       |       1 3
    |       |       1 2
    |       |       2 3
    |   id: 4 type: low-level
    |-- edges:
    |       5 4
    |       5 4
    |       0 5
