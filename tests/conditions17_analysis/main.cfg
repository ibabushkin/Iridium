
=== 0 0 8 ===
main proc near
var_20= dword ptr -20h
var_8= dword ptr -8
var_4= dword ptr -4
push ebp
mov ebp, esp
and esp, 0FFFFFFF0h
sub esp, 20


=== 1 8 13 ===
loc_8048515:
add [esp+20h+var_4], 1
add [esp+20h+var_8], 1
mov [esp+20h+var_20], offset unk_804861C
call _printf


=== 2 13 15 ===
cmp [esp+20h+var_4], 3
jg short locret_804853D


=== 3 15 17 ===
mov eax, [esp+20h+var_8]
and eax, 1


=== 4 17 19 ===
test eax, eax
jz short loc_8048515


=== 5 19 23 ===
locret_804853D:
leave 
retn 
main endp

0-1
1-2
2-5
2-3
3-4
4-1
4-5
==================
Analyzer is reducing graph ...
Postorder of dfs-tree: [5, 4, 3, 2, 1, 0]
==================
analyzing node 5 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [5]
found nothing, block is singular.
==================
analyzing node 4 ...
target of backedge  ... False
branching ... True
couldn't find simple structure.
found knot-node: 5
block: [5]
found nothing, block is singular.
==================
analyzing node 3 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [3, 4]
appendable to 4 ... False
reduction successful.
current nodeset: | 0 | 1 | 2 | 5 | 6 | 
current edgeset: | 2-6 | 0-1 | 2-5 | 1-2 | 6-5 | 6-1 | 
applying recursive analysis ...
==================
analyzing node 6 ...
target of backedge  ... False
branching ... True
couldn't find simple structure.
found knot-node: 5
==================
analyzing node 2 ...
target of backedge  ... False
branching ... True
couldn't find simple structure.
found knot-node: 5
reducing condition: [2, 6]
replaced edges: 2-5 6-5 6-1
==================
analyzing node 1 ...
target of backedge  ... 7
branching ... False
loop... False
found simple structure.
block: [1, 7]
appendable to 7 ... False
correcting to do-loop.
6 None
2 5
6 5
reduction successful.
current nodeset: | 0 | 8 | 5 | 
current edgeset: | 8-5 | 0-8 | 
applying recursive analysis ...
==================
analyzing node 8 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [8, 5]
appendable to 5 ... False
reduction successful.
current nodeset: | 0 | 9 | 
current edgeset: | 0-9 | 
applying recursive analysis ...
==================
analyzing node 9 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [9]
found nothing, block is singular.
==================
analyzing node 0 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [0, 9]
appendable to 9 ... True
appending to existing block ... done: 9
reduction successful.
current nodeset: | 9 | 
applying recursive analysis ...
==================
analyzing node 9 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [9]
found nothing, block is singular.
==================RESULTS==================
Graph starting at node 9
id: 9 type: block starts at 0:
    |-- nodes:
    |   id: 0 type: low-level
    |   +----------------------+
    |   |main proc near        |
    |   |var_20= dword ptr -20h|
    |   |var_8= dword ptr -8   |
    |   |var_4= dword ptr -4   |
    |   |push ebp              |
    |   |mov ebp, esp          |
    |   |and esp, 0FFFFFFF0h   |
    |   |sub esp, 20           |
    |   +----------------------+
    |   
    |   id: 8 type: do-loop starts at 1:
    |       body:1 condition:7 
    |       |-- nodes:
    |       |   id: 1 type: low-level
    |       |   +----------------------------------------+
    |       |   |loc_8048515:                            |
    |       |   |add [esp+20h+var_4], 1                  |
    |       |   |add [esp+20h+var_8], 1                  |
    |       |   |mov [esp+20h+var_20], offset unk_804861C|
    |       |   |call _printf                            |
    |       |   +----------------------------------------+
    |       |   
    |       |   id: 7 type: condition starts at 2(2 && !6):
    |       |       |-- nodes:
    |       |       |   id: 2 type: low-level
    |       |       |   +-----------------------+
    |       |       |   |cmp [esp+20h+var_4], 3 |
    |       |       |   |jg short locret_804853D|
    |       |       |   +-----------------------+
    |       |       |   
    |       |       |   id: 6 type: block starts at 3:
    |       |       |       |-- nodes:
    |       |       |       |   id: 3 type: low-level
    |       |       |       |   +------------------------+
    |       |       |       |   |mov eax, [esp+20h+var_8]|
    |       |       |       |   |and eax, 1              |
    |       |       |       |   +------------------------+
    |       |       |       |   
    |       |       |       |   id: 4 type: low-level
    |       |       |       |   +--------------------+
    |       |       |       |   |test eax, eax       |
    |       |       |       |   |jz short loc_8048515|
    |       |       |       |   +--------------------+
    |       |       |       |   
    |       |       |       |-- edges:
    |       |       |       |       3-4
    |       |       |       
    |       |       |-- edges:
    |       |       |       2-6
    |       |       |   
    |       |       |-- outer edges:
    |       |       |       2-5
    |       |       |       6-5
    |       |       |       6-1
    |       |       
    |       |-- edges:
    |       |       1-7
    |       |       7-1
    |       
    |   id: 5 type: low-level
    |   +---------------+
    |   |locret_804853D:|
    |   |leave          |
    |   |retn           |
    |   |main endp      |
    |   +---------------+
    |   
    |-- edges:
    |       8-5
    |       0-8
    
