
=== 0 0 11 ===
deregister_tm_clones proc near
var_18= dword ptr -18h
push ebp
mov ebp, esp
push ebx
call __x86_get_pc_thunk_bx
add ebx, 140Fh
sub esp, 14h
lea eax, [ebx+23h]
lea edx, [ebx+20h]
sub eax, edx


=== 1 11 13 ===
cmp eax, 6
ja short loc_80483FB


=== 2 13 18 ===
loc_80483F5:
add esp, 14h
pop ebx
pop ebp
retn 


=== 3 18 20 ===
loc_80483FB:
mov eax, [ebx-10h]


=== 4 20 22 ===
test eax, eax
jz short loc_80483F5


=== 5 22 25 ===
mov [esp+18h+var_18], edx
call eax
jmp short loc_80483F5


=== 6 25 26 ===
deregister_tm_clones endp

==================
Reducing graph ...
postorder of dfs-tree: [5, 4, 3, 2, 1, 0]
==================
analyzing node 5 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [5]
found nothing, block is singular.
==================
analyzing node 4 ...
target of backedge  ... False
branching ... True
found simple structure.
if-then: [4, 5]
reduction successful.
current nodeset: | 0 | 1 | 2 | 3 | 7 | 
current edgeset: | 3-7 | 7-2 | 1-3 | 1-2 | 0-1 | 
applying recursive analysis ...
==================
analyzing node 7 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [7]
found nothing, block is singular.
==================
analyzing node 3 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [3, 7]
appendable to 7 ... False
reduction successful.
current nodeset: | 0 | 1 | 2 | 8 | 
current edgeset: | 1-8 | 1-2 | 0-1 | 8-2 | 
applying recursive analysis ...
==================
analyzing node 8 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [8]
found nothing, block is singular.
==================
analyzing node 2 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [2]
found nothing, block is singular.
==================
analyzing node 1 ...
target of backedge  ... False
branching ... True
found simple structure.
if-then: [8, 1]
reduction successful.
current nodeset: | 0 | 9 | 2 | 
current edgeset: | 9-2 | 0-9 | 
applying recursive analysis ...
==================
analyzing node 9 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [9, 2]
appendable to 2 ... False
reduction successful.
current nodeset: | 0 | 10 | 
current edgeset: | 0-10 | 
applying recursive analysis ...
==================
analyzing node 10 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [10]
found nothing, block is singular.
==================
analyzing node 0 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [0, 10]
appendable to 10 ... True
appending to existing block ... done: 10
reduction successful.
current nodeset: | 10 | 
applying recursive analysis ...
==================
analyzing node 10 ...
target of backedge  ... False
branching ... False
found simple structure.
block: [10]
found nothing, block is singular.
self 10 block 0 9 2 
condition_node None
self 9 if-then 1 8 
condition_node 
=== 1 11 13 ===
cmp eax, 6
ja short loc_80483FB

==================
id: 10 type: block starts at 0:
    |-- nodes:
    |   id: 0 type: low-level
    |   +------------------------------+
    |   |deregister_tm_clones proc near|
    |   |var_18= dword ptr -18h        |
    |   |push ebp                      |
    |   |mov ebp, esp                  |
    |   |push ebx                      |
    |   |call __x86_get_pc_thunk_bx    |
    |   |add ebx, 140Fh                |
    |   |sub esp, 14h                  |
    |   |lea eax, [ebx+23h]            |
    |   |lea edx, [ebx+20h]            |
    |   |sub eax, edx                  |
    |   +------------------------------+
    |   
    |   id: 9 type: if-then starts at 1:
    |       then:8 condition:1 
    |       |-- nodes:
    |       |   id: 1 type: low-level
    |       |   +--------------------+
    |       |   |cmp eax, 6          |
    |       |   |ja short loc_80483FB|
    |       |   +--------------------+
    |       |   
    |       |   id: 8 type: block starts at 3:
    |       |       |-- nodes:
    |       |       |   id: 3 type: low-level
    |       |       |   +------------------+
    |       |       |   |loc_80483FB:      |
    |       |       |   |mov eax, [ebx-10h]|
    |       |       |   +------------------+
    |       |       |   
    |       |       |   id: 7 type: if-then starts at 4:
    |       |       |       then:5 condition:4 
    |       |       |       |-- nodes:
    |       |       |       |   id: 4 type: low-level
    |       |       |       |   +--------------------+
    |       |       |       |   |test eax, eax       |
    |       |       |       |   |jz short loc_80483F5|
    |       |       |       |   +--------------------+
    |       |       |       |   
    |       |       |       |   id: 5 type: low-level
    |       |       |       |   +-------------------------+
    |       |       |       |   |mov [esp+18h+var_18], edx|
    |       |       |       |   |call eax                 |
    |       |       |       |   |jmp short loc_80483F5    |
    |       |       |       |   +-------------------------+
    |       |       |       |   
    |       |       |       |-- edges:
    |       |       |       |       4-5
    |       |       |       
    |       |       |-- edges:
    |       |       |       3-7
    |       |       
    |       |-- edges:
    |       |       1-8
    |       
    |   id: 2 type: low-level
    |   +------------+
    |   |loc_80483F5:|
    |   |add esp, 14h|
    |   |pop ebx     |
    |   |pop ebp     |
    |   |retn        |
    |   +------------+
    |   
    |-- edges:
    |       9-2
    |       0-9
    
